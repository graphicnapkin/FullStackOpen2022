{"ast":null,"code":"var _jsxFileName = \"/home/graphicnapkin/FullStackOpen2022/part2a/course/src/App.tsx\";\nimport React from 'react';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const course = {\n    name: 'Half Stack application development',\n    parts: [{\n      title: 'Fundamentals of React',\n      exercises: 10\n    }, {\n      title: 'Using props to pass data',\n      exercises: 7\n    }, {\n      title: 'State of a component',\n      exercises: 14\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\n\nconst Content = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: course.parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Content;\n\nconst Part = _ref2 => {\n  let {\n    part\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.title, \" \", part.exercises]\n  }, part.title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Part;\n\nconst Total = _ref3 => {\n  let {\n    course\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises\", ' ', course.parts.reduce((sum, current) => sum + current.exercises, 0)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Total;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Total\");","map":{"version":3,"names":["React","Header","App","course","name","parts","title","exercises","Content","map","part","Part","Total","reduce","sum","current"],"sources":["/home/graphicnapkin/FullStackOpen2022/part2a/course/src/App.tsx"],"sourcesContent":["import React from 'react'\nimport Header from './components/Header'\nimport { Course, PartType } from './types'\n\nfunction App() {\n    const course: Course = {\n        name: 'Half Stack application development',\n        parts: [\n            { title: 'Fundamentals of React', exercises: 10 },\n            { title: 'Using props to pass data', exercises: 7 },\n            { title: 'State of a component', exercises: 14 },\n        ],\n    }\n\n    return (\n        <div>\n            <Header course={course} />\n            <Content course={course} />\n            <Total course={course} />\n        </div>\n    )\n}\n\nconst Content = ({ course }: { course: Course }) => {\n    return (\n        <div>\n            {course.parts.map((part) => (\n                <Part part={part} />\n            ))}\n        </div>\n    )\n}\n\nconst Part = ({ part }: { part: PartType }) => {\n    return (\n        <p key={part.title}>\n            {part.title} {part.exercises}\n        </p>\n    )\n}\nconst Total = ({ course }: { course: Course }) => {\n    return (\n        <p>\n            Number of exercises{' '}\n            {course.parts.reduce((sum, current) => sum + current.exercises, 0)}\n        </p>\n    )\n}\n\nexport default App\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,SAASC,GAAT,GAAe;EACX,MAAMC,MAAc,GAAG;IACnBC,IAAI,EAAE,oCADa;IAEnBC,KAAK,EAAE,CACH;MAAEC,KAAK,EAAE,uBAAT;MAAkCC,SAAS,EAAE;IAA7C,CADG,EAEH;MAAED,KAAK,EAAE,0BAAT;MAAqCC,SAAS,EAAE;IAAhD,CAFG,EAGH;MAAED,KAAK,EAAE,sBAAT;MAAiCC,SAAS,EAAE;IAA5C,CAHG;EAFY,CAAvB;EASA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAQ,MAAM,EAAEJ;IAAhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,OAAD;MAAS,MAAM,EAAEA;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,KAAD;MAAO,MAAM,EAAEA;IAAf;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;KAjBQD,G;;AAmBT,MAAMM,OAAO,GAAG,QAAoC;EAAA,IAAnC;IAAEL;EAAF,CAAmC;EAChD,oBACI;IAAA,UACKA,MAAM,CAACE,KAAP,CAAaI,GAAb,CAAkBC,IAAD,iBACd,QAAC,IAAD;MAAM,IAAI,EAAEA;IAAZ;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CARD;;MAAMF,O;;AAUN,MAAMG,IAAI,GAAG,SAAkC;EAAA,IAAjC;IAAED;EAAF,CAAiC;EAC3C,oBACI;IAAA,WACKA,IAAI,CAACJ,KADV,OACkBI,IAAI,CAACH,SADvB;EAAA,GAAQG,IAAI,CAACJ,KAAb;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAND;;MAAMK,I;;AAON,MAAMC,KAAK,GAAG,SAAoC;EAAA,IAAnC;IAAET;EAAF,CAAmC;EAC9C,oBACI;IAAA,kCACwB,GADxB,EAEKA,MAAM,CAACE,KAAP,CAAaQ,MAAb,CAAoB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,GAAGC,OAAO,CAACR,SAApD,EAA+D,CAA/D,CAFL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAPD;;MAAMK,K;AASN,eAAeV,GAAf"},"metadata":{},"sourceType":"module"}