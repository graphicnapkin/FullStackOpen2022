{"ast":null,"code":"var _jsxFileName = \"/home/graphicnapkin/FullStackOpen2022/part7/routed-anecdotes/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport AnecdoteList from './components/AnecdoteList';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport CreateNew from './components/CreateNew';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [anecdotes, setAnecdotes] = useState([{\n    content: 'If it hurts, do it more often',\n    author: 'Jez Humble',\n    info: 'https://martinfowler.com/bliki/FrequencyReducesDifficulty.html',\n    votes: 0,\n    id: 1\n  }, {\n    content: 'Premature optimization is the root of all evil',\n    author: 'Donald Knuth',\n    info: 'http://wiki.c2.com/?PrematureOptimization',\n    votes: 0,\n    id: 2\n  }]);\n  const [notification, setNotification] = useState('');\n\n  const addNew = anecdote => {\n    anecdote.id = Math.round(Math.random() * 10000);\n    setAnecdotes(anecdotes.concat(anecdote));\n  };\n\n  const anecdoteById = id => anecdotes.find(a => a.id === id);\n\n  const vote = id => {\n    const anecdote = anecdoteById(id);\n\n    if (anecdote) {\n      const voted = { ...anecdote,\n        votes: anecdote.votes + 1\n      };\n      return setAnecdotes(anecdotes.map(a => a.id === id ? voted : a));\n    }\n\n    console.error(`anecdote with id: ${id} not found`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Software anecdotes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/anecdotes\",\n        element: /*#__PURE__*/_jsxDEV(AnecdoteList, {\n          anecdotes: anecdotes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/new\",\n        element: /*#__PURE__*/_jsxDEV(CreateNew, {\n          addnew: addNew\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ffPGu9Lzy/28Zp9kWe/B6v0wvnY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/graphicnapkin/FullStackOpen2022/part7/routed-anecdotes/src/App.tsx"],"names":["useState","BrowserRouter","Router","Routes","Route","Menu","AnecdoteList","About","Footer","CreateNew","App","anecdotes","setAnecdotes","content","author","info","votes","id","notification","setNotification","addNew","anecdote","Math","round","random","concat","anecdoteById","find","a","vote","voted","map","console","error"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom'\n\nimport Menu from './components/Menu'\nimport AnecdoteList from './components/AnecdoteList'\nimport About from './components/About'\nimport Footer from './components/Footer'\nimport CreateNew from './components/CreateNew'\n\nconst App = () => {\n  const [anecdotes, setAnecdotes] = useState([\n    {\n      content: 'If it hurts, do it more often',\n      author: 'Jez Humble',\n      info: 'https://martinfowler.com/bliki/FrequencyReducesDifficulty.html',\n      votes: 0,\n      id: 1,\n    },\n    {\n      content: 'Premature optimization is the root of all evil',\n      author: 'Donald Knuth',\n      info: 'http://wiki.c2.com/?PrematureOptimization',\n      votes: 0,\n      id: 2,\n    },\n  ] as Anecdote[])\n\n  const [notification, setNotification] = useState('')\n\n  const addNew = (anecdote: Anecdote) => {\n    anecdote.id = Math.round(Math.random() * 10000)\n    setAnecdotes(anecdotes.concat(anecdote))\n  }\n\n  const anecdoteById = (id: number) => anecdotes.find((a) => a.id === id)\n\n  const vote = (id: number) => {\n    const anecdote = anecdoteById(id)\n\n    if (anecdote) {\n      const voted = {\n        ...anecdote,\n        votes: anecdote.votes + 1,\n      }\n\n      return setAnecdotes(anecdotes.map((a) => (a.id === id ? voted : a)))\n    }\n    console.error(`anecdote with id: ${id} not found`)\n  }\n\n  return (\n    <Router>\n      <h1>Software anecdotes</h1>\n      <Menu />\n      <Routes>\n        <Route\n          path='/anecdotes'\n          element={<AnecdoteList anecdotes={anecdotes} />}\n        />\n        <Route path='/about' element={<About />}></Route>\n        <Route path='/new' element={<CreateNew addnew={addNew} />} />\n      </Routes>\n      <Footer />\n    </Router>\n  )\n}\n\nexport interface Anecdote {\n  author: string\n  info: string\n  votes: number\n  id?: number\n  content: string\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}