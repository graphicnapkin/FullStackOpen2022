{"ast":null,"code":"var _jsxFileName = \"/home/graphicnapkin/FullStackOpen2022/part7/routed-anecdotes/src/components/Anecdote.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Anecdote = _ref => {\n  _s();\n\n  var _anecdotes$find;\n\n  let {\n    anecdote,\n    anecdotes\n  } = _ref;\n  const id = parseInt(useParams().id || '');\n  if (anecdote) return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: anecdote.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 24\n  }, this);\n  if (!anecdotes) return null;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: (_anecdotes$find = anecdotes.find(a => a.id == id)) === null || _anecdotes$find === void 0 ? void 0 : _anecdotes$find.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n  return null;\n};\n\n_s(Anecdote, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = Anecdote;\nexport default Anecdote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Anecdote\");","map":{"version":3,"sources":["/home/graphicnapkin/FullStackOpen2022/part7/routed-anecdotes/src/components/Anecdote.tsx"],"names":["useParams","Anecdote","anecdote","anecdotes","id","parseInt","content","find","a"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,QAMX;AAAA;;AAAA;;AAAA,MANY;AAChBC,IAAAA,QADgB;AAEhBC,IAAAA;AAFgB,GAMZ;AACJ,QAAMC,EAAE,GAAGC,QAAQ,CAACL,SAAS,GAAGI,EAAZ,IAAkB,EAAnB,CAAnB;AAEA,MAAIF,QAAJ,EAAc,oBAAO;AAAA,cAAKA,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACd,MAAI,CAACH,SAAL,EAAgB,OAAO,IAAP;AAChB,sBAAO;AAAA,iCAAKA,SAAS,CAACI,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACJ,EAAF,IAAQA,EAA9B,CAAL,oDAAK,gBAAmCE;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,SAAO,IAAP;AACD,CAbD;;GAAML,Q;UAOgBD,S;;;KAPhBC,Q;AAeN,eAAeA,QAAf","sourcesContent":["import { AnecdoteType } from '../App'\nimport { useParams } from 'react-router-dom'\n\nconst Anecdote = ({\n  anecdote,\n  anecdotes,\n}: {\n  anecdote?: AnecdoteType\n  anecdotes?: AnecdoteType[]\n}) => {\n  const id = parseInt(useParams().id || '')\n\n  if (anecdote) return <li>{anecdote.content}</li>\n  if (!anecdotes) return null\n  return <li>{anecdotes.find((a) => a.id == id)?.content}</li>\n  return null\n}\n\nexport default Anecdote\n"]},"metadata":{},"sourceType":"module"}