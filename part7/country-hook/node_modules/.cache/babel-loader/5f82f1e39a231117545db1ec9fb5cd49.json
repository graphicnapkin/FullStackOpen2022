{"ast":null,"code":"var _jsxFileName = \"/home/graphicnapkin/FullStackOpen2022/part7/country-hook/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useField = type => {\n  _s();\n\n  const [value, setValue] = useState('');\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  return {\n    type,\n    value,\n    onChange\n  };\n};\n\n_s(useField, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\nconst useCountry = name => {\n  _s2();\n\n  const [country, setCountry] = useState(null);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      if (!name) return;\n      const res = await axios.get(`https://restcountries.com/v3.1/name/${name}?fullText=true`);\n      console.log('calling api');\n      setCountry(res.data[0]);\n    })();\n  }, [name]);\n  return country;\n};\n\n_s2(useCountry, \"9L3Zg5FcscnsQ/D6FObYQh4sBQ4=\");\n\nconst Country = _ref => {\n  let {\n    country\n  } = _ref;\n\n  if (!country) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"not found...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"population \", country.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"capital \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      height: \"100\",\n      alt: `flag of ${country.name.common}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Country;\n\nconst App = () => {\n  _s3();\n\n  const nameInput = useField('text');\n  const [name, setName] = useState('');\n  const country = useCountry(name);\n\n  const fetch = e => {\n    e.preventDefault();\n    setName(nameInput.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fetch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...nameInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), country && /*#__PURE__*/_jsxDEV(Country, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(App, \"khjVtbRcos+8++AZ+yLoPulIuQg=\", false, function () {\n  return [useField, useCountry];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/graphicnapkin/FullStackOpen2022/part7/country-hook/src/App.tsx"],"names":["useState","useEffect","axios","useField","type","value","setValue","onChange","event","target","useCountry","name","country","setCountry","res","get","console","log","data","Country","common","population","capital","flags","png","App","nameInput","setName","fetch","e","preventDefault"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAIC,IAAD,IAAkB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,QAAQ,GAAIC,KAAD,IAAgD;AAC/DF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAFD;;AAIA,SAAO;AACLD,IAAAA,IADK;AAELC,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAZD;;GAAMJ,Q;;AAcN,MAAMO,UAAU,GAAIC,IAAD,IAAkB;AAAA;;AACnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;;AAAC,KAAC,YAAY;AACZ,UAAI,CAACU,IAAL,EAAW;AACX,YAAMG,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACf,uCAAsCJ,IAAK,gBAD5B,CAAlB;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAJ,MAAAA,UAAU,CAACC,GAAG,CAACI,IAAJ,CAAS,CAAT,CAAD,CAAV;AACD,KAPA;AAQF,GATQ,EASN,CAACP,IAAD,CATM,CAAT;AAWA,SAAOC,OAAP;AACD,CAfD;;IAAMF,U;;AAiBN,MAAMS,OAAO,GAAG,QAA2C;AAAA,MAA1C;AAAEP,IAAAA;AAAF,GAA0C;;AACzD,MAAI,CAACA,OAAL,EAAc;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,gBAAKA,OAAO,CAACD,IAAR,CAAaS;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gCAAiBR,OAAO,CAACS,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BAAcT,OAAO,CAACU,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AACE,MAAA,GAAG,EAAEV,OAAO,CAACW,KAAR,CAAcC,GADrB;AAEE,MAAA,MAAM,EAAC,KAFT;AAGE,MAAA,GAAG,EAAG,WAAUZ,OAAO,CAACD,IAAR,CAAaS,MAAO;AAHtC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAjBD;;KAAMD,O;;AAmBN,MAAMM,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAGvB,QAAQ,CAAC,MAAD,CAA1B;AACA,QAAM,CAACQ,IAAD,EAAOgB,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMY,OAAO,GAAGF,UAAU,CAACC,IAAD,CAA1B;;AAEA,QAAMiB,KAAK,GAAIC,CAAD,IAAyC;AACrDA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,OAAO,CAACD,SAAS,CAACrB,KAAX,CAAP;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEuB,KAAhB;AAAA,8BACE,sBAAWF;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGd,OAAO,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YALd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnBD;;IAAMa,G;UACctB,Q,EAEFO,U;;;MAHZe,G;AA4BN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst useField = (type: string) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n  }\n}\n\nconst useCountry = (name: string) => {\n  const [country, setCountry] = useState(null)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!name) return\n      const res = await axios.get(\n        `https://restcountries.com/v3.1/name/${name}?fullText=true`\n      )\n      console.log('calling api')\n      setCountry(res.data[0])\n    })()\n  }, [name])\n\n  return country\n}\n\nconst Country = ({ country }: { country: CountryType }) => {\n  if (!country) {\n    return <div>not found...</div>\n  }\n\n  return (\n    <div>\n      <h3>{country.name.common}</h3>\n      <div>population {country.population}</div>\n      <div>capital {country.capital}</div>\n      <img\n        src={country.flags.png}\n        height='100'\n        alt={`flag of ${country.name.common}`}\n      />\n    </div>\n  )\n}\n\nconst App = () => {\n  const nameInput = useField('text')\n  const [name, setName] = useState('')\n  const country = useCountry(name)\n\n  const fetch = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    setName(nameInput.value)\n  }\n\n  return (\n    <div>\n      <form onSubmit={fetch}>\n        <input {...nameInput} />\n        <button>find</button>\n      </form>\n      {country && <Country country={country} />}\n    </div>\n  )\n}\n\ninterface CountryType {\n  name: { common: string }\n  population: number\n  capital: string\n  flags: { png: string }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}