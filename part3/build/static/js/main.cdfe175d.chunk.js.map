{"version":3,"sources":["components/api.tsx","components/Search.tsx","components/Form.tsx","components/Contact.tsx","components/Numbers.tsx","components/Message.tsx","App.tsx","index.tsx"],"names":["getContacts","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","contactsList","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","makeContact","_ref2","_callee2","contact","_context2","post","_x","deleteContact","_ref3","_callee3","id","_context3","delete","_x2","updateContact","_ref4","_callee4","_context4","patch","_x3","_x4","Search","filter","setFilter","react_default","a","createElement","value","onChange","e","target","Form","persons","setPersons","_useState","useState","_useState2","slicedToArray","newContact","setNewContact","onSubmit","preventDefault","existingContact","find","person","name","window","confirm","concat","updatedRecord","objectSpread","number","map","then","toConsumableArray","type","Contact","onClick","err","Numbers","match","components_Contact","key","baseStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","styles","added","color","deleted","updated","Notificaiton","msg","kind","style","displayNotification","setNotification","setTimeout","App","NaN","_useState3","_useState4","_useState5","_useState6","notification","handleSetPersons","useEffect","contacts","Message","components_Search","components_Form","components_Numbers","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cdfe175d.chunk.js","sourcesContent":["import axios from 'axios'\nimport { ContactType } from '../types'\n\nexport const getContacts = async () => {\n  const response = axios.get('/api/people')\n  const contactsList = await response \n  return contactsList.data as unknown as ContactType[]\n}\n\nexport const makeContact = async (contact: ContactType) => {\n  const response = await axios.post('/api/people',contact)\n  return response.data \n}\n\nexport const deleteContact = async (id: number) => {\n  const response = await axios.delete('/api/people/'+id)\n  return response.data\n}\n\nexport const updateContact = async (id: number, data: ContactType) => {\n  const response = await axios.patch('/api/people/'+id, data) \n  return response.data\n}\n","import React, { useState } from 'react'\n\nconst Search = ({ filter, setFilter }: SearchProps) => {\n    return (\n        <div>\n            filter shown with\n            <input value={filter} onChange={(e) => setFilter(e.target.value)} />\n            <br />\n        </div>\n    )\n}\n\ninterface SearchProps {\n    filter: string\n    setFilter: React.Dispatch<React.SetStateAction<string>>\n}\n\nexport default Search\n","import React, { useState } from \"react\";\nimport { ContactType } from \"../types\";\nimport { makeContact, updateContact } from \"./api\";\n\nconst Form = ({ persons, setPersons }: FormProps) => {\n  const [newContact, setNewContact] = useState<ContactType>({} as ContactType);\n  const handleSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const existingContact = persons.find(\n      (person) => person.name === newContact.name\n    );\n    if (existingContact) {\n      const confirm = window.confirm(\n        `${newContact.name} is already added to the phonebook, replace the old number with a new one?`\n      );\n      if (confirm) {\n        const updatedRecord = { ...existingContact, number: newContact.number };\n        updateContact(updatedRecord.id, updatedRecord);\n        setPersons(\n          persons.map((person) =>\n            person.name !== updatedRecord.name ? person : updatedRecord\n          ),\n          updatedRecord,\n          \"updated\"\n        );\n      }\n      return;\n    }\n    const response = makeContact(newContact);\n    response.then((data) => setPersons([...persons, data], data, \"added\"));\n  };\n\n  return (\n    <div>\n      <h1>add a new</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          name:{\" \"}\n          <input\n            onChange={(e) =>\n              setNewContact({\n                ...newContact,\n                name: e.target.value,\n              })\n            }\n            value={newContact.name || \"\"}\n          />\n          <br />\n          number:{\" \"}\n          <input\n            onChange={(e) =>\n              setNewContact({\n                ...newContact,\n                number: e.target.value,\n              })\n            }\n            value={newContact.number || \"\"}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\ninterface FormProps {\n  persons: ContactType[];\n  setPersons: (\n    persons: ContactType[],\n    person: ContactType,\n    kind: string\n  ) => void;\n}\nexport default Form;\n","import React from \"react\";\nimport { ContactType } from \"../types\";\nimport { deleteContact, getContacts } from \"./api\";\n\nconst Contact = ({ person, persons, setPersons }: ContactProps) => {\n  const handleDelete = () => {\n    const confirm = window.confirm(`Delete ${person.name}?`);\n    try {\n      if (confirm) deleteContact(person.id);\n    } catch(err) {\n    setPersons(persons.filter((contact) => contact.id !== person.id),person,\"notfound\");\n    }\n    setPersons(persons.filter((contact) => contact.id !== person.id),person,\"deleted\");\n  };\n\n  return (\n    <div>\n      {person.name} {person.number}{\" \"}\n      <button onClick={handleDelete}>delete</button>\n    </div>\n  );\n};\n\ninterface ContactProps {\n  person: ContactType;\n  persons: ContactType[];\n  setPersons: (persons: ContactType[], person: ContactType, kind: string) => void;\n}\n\nexport default Contact;\n","import React from 'react'\nimport { ContactType } from '../types'\nimport Contact from './Contact'\n\nconst Numbers = ({ persons, setPersons, filter}: NumbersProps) => {\n    return (\n        <div>\n            <h1>Numbers</h1>\n            {persons\n                .filter(\n                    (person) =>\n                        person.name.match(filter) || person.number.match(filter)\n                )\n                .map((person) => (\n                    <Contact person={person} persons={persons} setPersons={setPersons} key={person.id} />\n                ))}\n        </div>\n    )\n}\n\ninterface NumbersProps {\n    persons: ContactType[]\n    setPersons: (persons: ContactType[], person: ContactType, kind: string) => void\n    filter: string\n}\n\nexport default Numbers\n","import React from \"react\";\n\nconst Notificaiton = ({ msg, kind }: NotificationProps) => {\n  if (!msg) return null;\n  return <div style={{ ...styles[kind || \"\"] }}>{msg}</div>;\n};\ninterface NotificationProps {\n  msg: string;\n  kind?: string;\n}\nconst baseStyle = {\n  background: \"lightgrey\",\n  fontSize: \"20px\",\n  borderStyle: \"solid\",\n  borderRadius: \"5px\",\n  padding: \"10px\",\n  marginBottom: \"10px\",\n};\n\nconst styles: { [kind: string]: React.CSSProperties } = {\n  added: {\n    color: \"green\",\n    ...baseStyle,\n  },\n  deleted: {\n    color: \"red\",\n    ...baseStyle,\n  },\n  updated: {\n    color: \"black\",\n    ...baseStyle,\n  },\n};\n\nexport default Notificaiton;\n","import React, { useEffect, useState } from \"react\";\nimport { ContactType } from \"./types\";\nimport { getContacts } from \"./components/api\";\n\nimport Filter from \"./components/Search\";\nimport PersonForm from \"./components/Form\";\nimport Contacts from \"./components/Numbers\";\nimport Notificaiton from \"./components/Message\";\n\nconst App = () => {\n  const [persons, setPersons] = useState<ContactType[]>([\n    { name: \"\", number: \"\", id: NaN },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({ msg: \"\", kind: \"\" });\n\n  const handleSetPersons = (\n    persons: ContactType[],\n    person: ContactType,\n    kind: string\n  ) => {\n    setPersons(persons);\n    person && kind && displayNotification(person, kind, setNotification)\n  }\n  \n  useEffect(() => {\n    const currentContacts = getContacts().then((contacts) =>\n      setPersons(contacts)\n    );\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notificaiton msg={notification.msg} kind={notification.kind} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <PersonForm persons={persons} setPersons={handleSetPersons} />\n      <Contacts\n        persons={persons}\n        setPersons={handleSetPersons}\n        filter={filter}\n      />\n    </div>\n  );\n};\n\nconst displayNotification = (person: ContactType, kind: string, setNotification: React.Dispatch<React.SetStateAction<{msg: string, kind: string}>>) => {\n\n    if (person && kind) {\n      if (kind === \"notfound\") {\n        setNotification({\n          msg: `${person.name} has already been removed from server`,\n          kind,\n        });\n      } else {\n        setNotification({ msg: `${person.name} was ${kind}`, kind });\n      }\n    }\n    setTimeout(() => setNotification({ msg: \"\", kind: \"\" }), 5000);\n  };\n\n\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement)\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n)\n"],"sourceRoot":""}